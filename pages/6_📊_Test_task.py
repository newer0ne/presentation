import streamlit as st
import pandas as pd

st.set_page_config(
    page_title="Test task solution", page_icon="üìä", layout="wide", initial_sidebar_state="expanded"
)







st.write(
    """
# üìä ADS analyzer
–û—Ü–µ–Ω–∫–∞ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ —Ä–µ–∫–ª–∞–º–Ω–æ–π –∫–æ–º–ø–∞–Ω–∏–∏.
"""
)

upcol1, upcol2, upcol3 = st.columns(3)

with upcol1:
    uploaded_ads = st.file_uploader("–ó–∞–≥—Ä—É–∑–∫–∞ —Ä–µ–∫–ª–∞–º–Ω–æ–π –∫–æ–º–ø–∞–Ω–∏–∏ .CSV", type=".csv")

with upcol2:
    uploaded_leads = st.file_uploader("–ó–∞–≥—Ä—É–∑–∫–∞ –ª–∏–¥–æ–≤ .CSV", type=".csv")

with upcol3:
    uploaded_purchases = st.file_uploader("–ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ–¥–∞–∂ .CSV", type=".csv")

use_example = st.checkbox(
    "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ñ–∞–π–ª —Å –ø—Ä–∏–º–µ—Ä–æ–º", False, help="–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π —Ñ–∞–π–ª —Å –ø—Ä–∏–º–µ—Ä–æ–º —Ä–µ–∫–ª–∞–º—ã –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ —Ä–∞–±–æ—Ç—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"
)

if use_example:
    uploaded_ads = "ads.csv"
    uploaded_leads = "leads.csv"
    uploaded_purchases = "purchases.csv"

if uploaded_ads:
    ads = pd.read_csv(uploaded_ads)
if uploaded_leads:
    leads = pd.read_csv(uploaded_leads)
if uploaded_purchases:
    purchases = pd.read_csv(uploaded_purchases)

if uploaded_ads is not None and uploaded_leads is not None and uploaded_purchases is not None:
    
    ads_tab, leads_tab, purchases_tab = st.tabs(['ads', 'leads', 'purchases'])

    with ads_tab:

        ads['d_utm_term'] = ads['d_utm_term'].fillna('-')
        ads['created_at'] = pd.to_datetime(ads['created_at'])
        
        st.dataframe(ads)
    
    with leads_tab:
        
        leads.fillna({'d_lead_utm_source': '-',
            'd_lead_utm_medium': '-',
            'd_lead_utm_campaign': '-',
            'd_lead_utm_content': '-',
            'd_lead_utm_term': '-'}, inplace=True)
        
        leads.rename(columns = {'d_lead_utm_source': 'd_utm_source',
            'd_lead_utm_medium': 'd_utm_medium',
            'd_lead_utm_campaign': 'd_utm_campaign',
            'd_lead_utm_content': 'd_utm_content',
            'd_lead_utm_term': 'd_utm_term',
            'lead_created_at': 'created_at'}, inplace=True)

        st.dataframe(leads)
    
    with purchases_tab:

        purchases['purchase_created_at'] = pd.to_datetime(purchases['purchase_created_at'])
        purchases.dropna(axis=0, subset=['m_purchase_amount'], inplace=True)
        
        st.dataframe(purchases)

